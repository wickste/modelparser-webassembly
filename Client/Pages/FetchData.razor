@page "/fetchdata"
@inject HttpClient Http

<h1>Parser Results</h1>

<p>This component demonstrates calling the DTDL model parser in web assembly</p>

@if (parserResults == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>DTMI</th>
                <th>EntityKind</th>
                <th>Description</th>
                <th>DisplayName</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var parserResult in parserResults)
            {
                <tr>
                    <td>@parserResult.Dtmi</td>
                    <td>@parserResult.EntityKind</td>
                    <td>@parserResult.Description</td>
                    <td>@parserResult.DisplayName</td>
                    <td>@parserResult.Comment</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private ParserResult[] parserResults;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Program._model))
        {
            ModelParser parser = new ModelParser();
            parser.DtmiResolver = DtmiResolverCallback;
            var results = await parser.ParseAsync(new string[] { Program._model });
            List<ParserResult> tableContent = new List<ParserResult>();
            foreach (var result in results)
            {
                tableContent.Add(new ParserResult()
                {
                    Dtmi = result.Key.ToString(),
                    EntityKind = result.Value.EntityKind.ToString(),
                    DisplayName = string.Join(',', result.Value.DisplayName.ToArray()),
                    Description = string.Join(',', result.Value.Description.ToArray()),
                    Comment = result.Value.Comment
                });
            }
            parserResults = tableContent.ToArray();
        }
    }

    private static Task<IEnumerable<string>> DtmiResolverCallback(IReadOnlyCollection<Dtmi> dtmis)
    {
        throw new NotImplementedException();
    }

    public class ParserResult
    {
        public string Dtmi { get; set; }
        public string EntityKind { get; set; }
        public string Description { get; set; }
        public string DisplayName { get; set; }
        public string Comment { get; set; }
    }
}
